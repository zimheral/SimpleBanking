openapi: 3.0.2
info:
  description: Banking api with basic functionality. Based on the OpenAPI 3.0 specification.
  version: 1.0-SNAPSHOT
  title: SimpleBanking API
  contact:
    email: zimheral@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: customer
    description: Operations related to customer data
  - name: account
    description: Operations related to accounts

paths:
  '/account/open/{customerId}':
    post:
      tags:
        - account
      summary: Open an account for the customer
      description: Open an account for the customer
      operationId: openAccount
      parameters:
        - $ref: '#/components/parameters/customerId'
      requestBody:
        description: Initial credit on the account
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credit'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid data provided
        '404':
          description: Customer not found
  /customer/{customerId}/info:
    get:
      tags:
        - customer
      description: Returns customer information including transactions
      operationId: getCustomerData
      parameters:
        - $ref: '#/components/parameters/customerId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerData'
        '400':
          description: Invalid data provided
        '404':
          description: Customer not found

components:
  schemas:
    Money:
      type: number
      example:
        10000
    Credit:
      type: object
      required:
        - credit
      properties:
        credit:
          $ref: '#/components/schemas/Money'
    CustomerData:
      type: object
      required:
        - name
        - surname
      properties:
        name:
          type: string
          example: John
        surname:
          type: string
          example: Doe
        account:
          $ref: '#/components/schemas/Account'
    Account:
      type: object
      required:
        - iban
        - balance
        - accountType
      properties:
        iban:
          type: string
          example: 'BE123457891234'
        balance:
          $ref: '#/components/schemas/Money'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        accountType:
          type: string
          enum: [CURRENT_ACCOUNT, SAVINGS_ACCOUNT]
    Transaction:
      type: object
      required:
        - id
        - amount
      properties:
        id:
          type: integer
          format: int64
        amount:
          $ref: '#/components/schemas/Money'

  parameters:
    customerId:
      in: path
      name: customerId
      description: ID of the customer to modify
      required: true
      schema:
        type: integer
        format: int64
